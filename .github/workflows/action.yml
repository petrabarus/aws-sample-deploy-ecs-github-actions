name: deploy-to-ecs
on: [push]
jobs:
    deploy-to-ecs:
        runs-on: ubuntu-latest
        env:
            AWS_REGION: us-east-1
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
            - name: Login to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v1
            - name: Build, Tag, and Push Image to Amazon ECR
              env:
                IMAGE_TAG: ${{ github.sha }}
              run: |
                docker build -t ${{ secrets.REGISTRY_URI }}:$IMAGE_TAG .
                docker push ${{ secrets.REGISTRY_URI }}:$IMAGE_TAG
            - name: Get Current Task Definition
              run: |
                # Obtain latest task definition
                TASK_DEFINITION_ARN=`aws ecs list-task-definitions --family ${{ secrets.TASK_DEFINITION_FAMILY }} --sort DESC | jq -r '.taskDefinitionArns[0]'`
                echo $TASK_DEFINITION_ARN
                aws ecs describe-task-definition --task-definition $TASK_DEFINITION_ARN | jq -r '.taskDefinition' > task-definition.json
            - name: Render Amazon ECS Task Definition
              id: render-web-container
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              env:
                IMAGE_TAG: ${{ github.sha }}
              with:
                task-definition: task-definition.json
                container-name: web
                image: ${{ secrets.REGISTRY_URI }}:$IMAGE_TAG
            - name: Deploy to Amazon ECS Service
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.render-web-container.outputs.task-definition }}
                service: ${{ secrets.SERVICE_NAME }}
                cluster: ${{ secrets.CLUSTER_NAME }}

